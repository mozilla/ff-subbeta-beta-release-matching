## Examine data briefly
kable(introduce(lalonde)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
## View LaLonde dataframe
kable(head(lalonde, 10)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
glimpse(lalonde)
kable(df_status(lalonde, FALSE)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
f <- freq(lalonde$treat)
table(lalonde$treat)
summary(lm(re78 ~ treat, data=lalonde))
unmatched <- lm(re78 ~ treat, data=lalonde)
#summary(unmatched)
unmatched
effect <- unmatched$coeff[2]
effect
unmatched <- lm(re78 ~ treat + age + educ + black + hispan + nodegree + married + re75,
data = lalonde)
summary(unmatched)
unmatched <- lm(re78 ~ treat, data=lalonde)
summary(unmatched)
unmatched <- lm(re78 ~ treat + age + educ + black + hispan + nodegree + married + re75,
data = lalonde)
summary(unmatched)
View(lalonde)
treated	<- (lalonde$treat==1)
cov	<- lalonde[,2:9]
std.diff	<- apply(cov,2,function(x)	100*(mean(x[treated])- mean(x[!treated]))/(sqrt(0.5*(var(x[treated])	+ var(x[!treated])))))
abs(std.diff)
xBalance(treat ~ . - (re78 + treat), data =lalonde, report=c("all"))
#xBalance(treat	~ age	+ educ	+ nodegree	+ re74	+ re75,	data	= lalonde,	report = c("chisquare.test"))
treated	<- (lalonde$treat==1)
cov	<- lalonde[,2:9]
std.diff	<- apply(cov,2,function(x)	100*(mean(x[treated])- mean(x[!treated]))/(sqrt(0.5*(var(x[treated])	+ var(x[!treated])))))
sort(abs(std.diff))
unmatched <- lm(re78 ~ treat, data=lalonde)
summary(unmatched)
unmatched <- lm(re78 ~ treat + age + educ + black + hispan + nodegree + married + re75,
data = lalonde)
summary(unmatched)
#xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("all"))
xBalance(treat	~ age	+ educ	+ nodegree	+ re74	+ re75,	data	= lalonde,	report = c("chisquare.test"))
xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("all"))
xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("chisquare.test"))
xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("all"))
unmatched <- lm(re78 ~ treat, data=lalonde)
summary(unmatched)
effect <- unmatched$coeff[2]
effect
unmatched <- lm(re78 ~ treat + age + educ + black + hispan + nodegree + married + re75,
data = lalonde)
summary(unmatched)
unmatched <- lm(re78 ~ treat + age + educ + black + hispan + nodegree + married + re75, data = lalonde)
summary(unmatched)
unmatched <- lm(re78 ~ treat + treat	+ age	+ educ	+ nodegree	+ re74	+ re75	+ married	+ black	+ hispan, data = lalonde)
summary(unmatched)
unmatched <- lm(re78 ~ treat + age	+ educ	+ nodegree	+ re74	+ re75	+ married	+ black	+ hispan, data = lalonde)
summary(unmatched)
ps	<- glm(treat ~ age + educ + nodegree + re74 + re75,	data=lalonde,	family=binomial())
summary(ps)
ps	<- glm(re78 ~ treat + age	+ educ	+ nodegree	+ re74	+ re75	+ married	+ black	+ hispan,	data=lalonde,	family=binomial())
ps	<- glm(treat ~ age + educ + nodegree + re74 + re75 + married + black + hispan,	data=lalonde,	family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
histbackback(split(lalonde$psvalue,	lalonde$treat),	main= "Propensity	score	before matching",	xlab=c("control",	"treatment"))
histbackback(split(lalonde$psvalue,	lalonde$treat),	main= "Propensity score before matching",	xlab=c("control",	"treatment"))
ps <- glm(treat ~ age + educ + nodegree + re74 + re75,	data=lalonde,	family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
histbackback(split(lalonde$psvalue,	lalonde$treat),	main= "Propensity score before matching",	xlab=c("control",	"treatment"))
ps <- glm(treat ~ age + educ + nodegree + re74 + re75 + married + black + hispan,	data=lalonde,	family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
histbackback(split(lalonde$psvalue,	lalonde$treat),	main= "Propensity score before matching",	xlab=c("control",	"treatment"))
ps <- glm(treat ~ age + educ + nodegree + re74 + re75 + married + black,	data=lalonde,	family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
ps <- glm(treat ~ age + educ + nodegree + re74 + re75,	data=lalonde,	family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
split(lalonde$psvalue,	lalonde$treat)
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="red" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="blue", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
plot(m.nn, type = "jitter")
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
## Install packages
#install.packages("MatchIt")
#install.packages("optmatch")
#install.packages("RItools")
## Loading the needed libraries
library(kableExtra)      # help you build common complex tables and manipulate table styles
library(DataExplorer)    # automated data exploration
library(tidyverse)       # for general data wrangling (includes readr and dplyr)
library(ggplot2)         # to draw statistical plots
library(MatchIt)
library(optmatch)
library(RItools)
library(ggthemes)
library(funModeling)
## Loading data: a subset of the LaLonde data is loaded with the MatchIt library
data(lalonde)
## Examine data briefly
kable(introduce(lalonde)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
## View LaLonde dataframe
kable(head(lalonde, 10)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
glimpse(lalonde)
kable(df_status(lalonde, FALSE)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
f <- freq(lalonde$treat)
treated	<- (lalonde$treat==1)
cov	<- lalonde[,2:9]
std.diff	<- apply(cov,2,function(x)	100*(mean(x[treated])- mean(x[!treated]))/(sqrt(0.5*(var(x[treated])	+ var(x[!treated])))))
sort(abs(std.diff))
xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("all"))
unmatched <- lm(re78 ~ treat, data=lalonde)
summary(unmatched)
effect <- unmatched$coeff[2]
effect
unmatched <- lm(re78 ~ treat + age	+ educ	+ nodegree	+ re74	+ re75	+ married	+ black	+ hispan, data = lalonde)
summary(unmatched)
ps <- glm(treat ~ age + educ + nodegree + re74 + re75,	data=lalonde,	family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
m.mahal	<- matchit(treat	~ age	+ educ	+ nodegree	+ re74	+ re75,	data	=lalonde,	mahvar
s	= c("age",	"educ",	"nodegree",	"re74",	"re75"),	caliper	= 0.25,	replace	= FALSE,	di
m.mahal <- matchit(treat ~ age + educ + nodegree + re74 + re75, data =lalonde, mahvar
s = c("age", "educ", "nodegree", "re74", "re75"), caliper = 0.25, replace = FALSE, di
m.mahal <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, mahvars = c("age", "educ", "nodegree", "re74", "re75"), caliper = 0.25, replace = FALSE, distance = "mahalanobis")
summary(m.mahal)
plot(m.nn, type = "jitter")
plot(m.nn, type = "hist")
plot(m.nn)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
## Install packages
#install.packages("MatchIt")
#install.packages("optmatch")
#install.packages("RItools")
## Loading the needed libraries
library(kableExtra)      # help you build common complex tables and manipulate table styles
library(DataExplorer)    # automated data exploration
library(tidyverse)       # for general data wrangling (includes readr and dplyr)
library(ggplot2)         # to draw statistical plots
library(MatchIt)
library(optmatch)
library(RItools)
library(ggthemes)
library(funModeling)
## Loading data: a subset of the LaLonde data is loaded with the MatchIt library
data(lalonde)
## Examine data briefly
kable(introduce(lalonde)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
## View LaLonde dataframe
kable(head(lalonde, 10)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
glimpse(lalonde)
kable(df_status(lalonde, FALSE)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
f <- freq(lalonde$treat)
treated	<- (lalonde$treat==1)
cov	<- lalonde[,2:9]
std.diff	<- apply(cov,2,function(x)	100*(mean(x[treated])- mean(x[!treated]))/(sqrt(0.5*(var(x[treated])	+ var(x[!treated])))))
sort(abs(std.diff))
xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("all"))
unmatched <- lm(re78 ~ treat, data=lalonde)
summary(unmatched)
effect <- unmatched$coeff[2]
effect
unmatched <- lm(re78 ~ treat + age	+ educ	+ nodegree	+ re74	+ re75	+ married	+ black	+ hispan, data = lalonde)
summary(unmatched)
ps <- glm(treat ~ age + educ + nodegree + re74 + re75,	data=lalonde,	family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
match.data	= match.data(m.nn)
plot(m.nn, type = "jitter", col = "red")
plot(m.nn, type = "jitter", col = "#111d5e")
### 1. Standardized difference
treated1 <- (match.data$treat==1)
cov1 <- match.data[,2:9]
std.diff1 <- apply(cov1,2,function(x) 100*(mean(x[treated1])- mean(x[!treated1]))/(sqrt(0.5*(var(x[treated1]) + var(x[!treated1])))))
abs(std.diff1)
### 2. chi-square test
xBalance(treat ~ age + educ + nodegree + re74 + re75, data = match.data, report = c("chisquare.test"))
histbackback(split(match.data$psvalue,	match.data$treat),	main= "Propensity	score	after	matching",	xlab=c("control",	"treatment"))
histbackback(split(match.data$psvalue, match.data$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
histbackback(split(match.data$psvalue, match.data$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
#barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
#barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(lalonde$psvalue,	lalonde$treat),	main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data$psvalue, match.data$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
# saving the data matched
matches <- data.frame(m.nn$match.matrix)
# finding the matches. one for group 1 one for group 2
group1 <- match(row.names(matches), row.names(match.data))
group2 <- match(matches$X1, row.names(match.data))
# extracting the outcome value for the matches
yT  <- match.data$re78[group1]
yC  <- match.data$re78[group2]
# binding
matched.cases <- cbind(matches, yT, yC)
#Paired t-test
t.test(matched.cases$yT, matched.cases$yC, paired = TRUE)
m.out <- matchit(treat ~ age + educ + black + hispan + married + nodegree + re74 + re75, data=lalonde, method="cem")
m.cem <- matchit(treat ~ age + educ + black + hispan + married + nodegree + re74 + re75, data=lalonde, method="cem")
install.packages('cem')
m.cem <- matchit(treat ~ age + educ + black + hispan + married + nodegree + re74 + re75, data=lalonde, method="cem")
summary(m.cem)
match.data.1 = match.data(m.cem)
m.nn <- matchit(treat ~ age + educ + black + hispan + married + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
match.data	= match.data(m.nn)
plot(m.nn, type = "jitter", col = "#111d5e")
out <- histbackback(split(match.data$psvalue, match.data$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
m.cem <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="cem")
summary(m.cem)
match.data.1	= match.data(m.cem)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
match.data2 = match.data(m.nn)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio=1, distance="mahalanobis")
summary(m.nn)
match.data2 = match.data(m.nn)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio=1, distance="mahalanobis")
summary(m.nn)
match.data3 = match.data(m.nn)
m.nnm <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio=1, distance="mahalanobis")
summary(m.nnm)
match.data3 = match.data(m.nnm)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
match.data2 = match.data(m.nn)
plot(m.cem, type = "jitter", col = "#111d5e")
plot(m.nn, type = "jitter", col = "#111d5e")
plot(m.nnm, type = "jitter", col = "#111d5e")
plot(m.cem, type = "jitter", col = "#111d5e")
plot(m.nn, type = "jitter", col = "#111d5e")
#plot(m.nnm, type = "jitter", col = "#111d5e") ## Not appropriate for pure Mahalanobis matching. No plots generated.
out <- histbackback(split(match.data.2$psvalue, match.data$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
m.nnm <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio=1, distance="mahalanobis")
summary(m.nnm)
match.data.3 = match.data(m.nnm)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
match.data.2 = match.data(m.nn)
out <- histbackback(split(match.data.2$psvalue, match.data$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.1$psvalue, match.data.1$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.2$psvalue, match.data.2$treat), main= "Propensity score after matching", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.2$psvalue, match.data.2$treat), main= "Propensity score after matching (NN)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.1$psvalue, match.data.1$treat), main= "Propensity score after matching (CEM)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.3$psvalue, match.data.3$treat), main= "Propensity score after matching (NN w/ Mahalanobis)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
plot(m.cem, type = "jitter", col = "#111d5e", main= "Propensity score after matching (CEM)")
plot(m.cem, type = "jitter", col = "#111d5e")
plot(m.nn, type = "jitter", col = "#111d5e")
#plot(m.nnm, type = "jitter", col = "#111d5e") ## Not appropriate for pure Mahalanobis matching. No plots generated.
## Install packages
#install.packages("MatchIt")
#install.packages("optmatch")
#install.packages("RItools")
## Loading the needed libraries
library(kableExtra)      # help you build common complex tables and manipulate table styles
library(DataExplorer)    # automated data exploration
library(tidyverse)       # for general data wrangling (includes readr and dplyr)
library(ggplot2)         # to draw statistical plots
library(MatchIt)
library(optmatch)
library(RItools)
library(ggthemes)
library(funModeling)
## Loading data: a subset of the LaLonde data is loaded with the MatchIt library
data(lalonde)
## Examine data briefly
kable(introduce(lalonde)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
## View LaLonde dataframe
kable(head(lalonde, 10)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
glimpse(lalonde)
kable(df_status(lalonde, FALSE)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
f <- freq(lalonde$treat)
treated <- (lalonde$treat==1)
cov <- lalonde[,2:9]
std.diff <- apply(cov,2,function(x) 100*(mean(x[treated])- mean(x[!treated]))/(sqrt(0.5*(var(x[treated]) + var(x[!treated])))))
sort(abs(std.diff))
xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("all"))
unmatched <- lm(re78 ~ treat, data=lalonde)
summary(unmatched)
effect <- unmatched$coeff[2]
effect
unmatched <- lm(re78 ~ treat + age + educ + nodegree + re74 + re75 + married + black + hispan, data = lalonde)
summary(unmatched)
ps <- glm(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
out <- histbackback(split(lalonde$psvalue, lalonde$treat), main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
m.cem <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="cem")
summary(m.cem)
match.data.1 = match.data(m.cem)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
match.data.2 = match.data(m.nn)
m.nnm <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio=1, distance="mahalanobis")
summary(m.nnm)
match.data.3 = match.data(m.nnm)
plot(m.cem, type = "jitter", col = "#111d5e")
plot(m.nn, type = "jitter", col = "#111d5e")
#plot(m.nnm, type = "jitter", col = "#111d5e") ## Not appropriate for pure Mahalanobis matching. No plots generated.
### 1. Standardized difference
treated1 <- (match.data$treat==1)
cov1 <- match.data[,2:9]
std.diff1 <- apply(cov1,2,function(x) 100*(mean(x[treated1])- mean(x[!treated1]))/(sqrt(0.5*(var(x[treated1]) + var(x[!treated1])))))
abs(std.diff1)
### 2. chi-square test
xBalance(treat ~ age + educ + nodegree + re74 + re75, data = match.data, report = c("chisquare.test"))
out <- histbackback(split(match.data.1$psvalue, match.data.1$treat), main= "Propensity score after matching (CEM)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.2$psvalue, match.data.2$treat), main= "Propensity score after matching (NN)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.3$psvalue, match.data.3$treat), main= "Propensity score after matching (NN w/ Mahalanobis)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
# saving the data matched
matches <- data.frame(m.nn$match.matrix)
# finding the matches. one for group 1 one for group 2
group1 <- match(row.names(matches), row.names(match.data))
group2 <- match(matches$X1, row.names(match.data))
# extracting the outcome value for the matches
yT  <- match.data$re78[group1]
yC  <- match.data$re78[group2]
# binding
matched.cases <- cbind(matches, yT, yC)
#Paired t-test
t.test(matched.cases$yT, matched.cases$yC, paired = TRUE)
### 1. Standardized difference
treated1 <- (match.data.1$treat==1)
cov1 <- match.data.1[,2:9]
std.diff1 <- apply(cov1,2,function(x) 100*(mean(x[treated1])- mean(x[!treated1]))/(sqrt(0.5*(var(x[treated1]) + var(x[!treated1])))))
abs(std.diff1)
### 1. Standardized difference
treated1 <- (match.data.2$treat==1)
cov1 <- match.data.2[,2:9]
std.diff1 <- apply(cov1,2,function(x) 100*(mean(x[treated1])- mean(x[!treated1]))/(sqrt(0.5*(var(x[treated1]) + var(x[!treated1])))))
abs(std.diff1)
### 2. chi-square test
xBalance(treat ~ age + educ + nodegree + re74 + re75, data = match.data.2, report = c("chisquare.test"))
## Install packages
#install.packages("MatchIt")
#install.packages("optmatch")
#install.packages("RItools")
## Loading the needed libraries
library(kableExtra)      # help you build common complex tables and manipulate table styles
library(DataExplorer)    # automated data exploration
library(tidyverse)       # for general data wrangling (includes readr and dplyr)
library(ggplot2)         # to draw statistical plots
library(MatchIt)
library(optmatch)
library(RItools)
library(ggthemes)
library(funModeling)
## Loading data: a subset of the LaLonde data is loaded with the MatchIt library
data(lalonde)
## Examine data briefly
kable(introduce(lalonde)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
## View LaLonde dataframe
kable(head(lalonde, 10)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
glimpse(lalonde)
kable(df_status(lalonde, FALSE)) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) %>%
scroll_box(width = "100%")
f <- freq(lalonde$treat)
treated <- (lalonde$treat==1)
cov <- lalonde[,2:9]
std.diff <- apply(cov,2,function(x) 100*(mean(x[treated])- mean(x[!treated]))/(sqrt(0.5*(var(x[treated]) + var(x[!treated])))))
sort(abs(std.diff))
xBalance(treat ~ . - (re78 + treat), data=lalonde, report=c("all"))
unmatched <- lm(re78 ~ treat, data=lalonde)
summary(unmatched)
effect <- unmatched$coeff[2]
effect
unmatched <- lm(re78 ~ treat + age + educ + nodegree + re74 + re75 + married + black + hispan, data = lalonde)
summary(unmatched)
ps <- glm(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, family=binomial())
summary(ps)
lalonde$psvalue <- predict(ps, type="response")
out <- histbackback(split(lalonde$psvalue, lalonde$treat), main="Propensity score before matching", xlab=c("control", "treatment"))
#! just adding color
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
m.cem <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="cem")
summary(m.cem)
match.data.1 = match.data(m.cem)
m.nn <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio = 1)
summary(m.nn)
match.data.2 = match.data(m.nn)
m.nnm <- matchit(treat ~ age + educ + nodegree + re74 + re75, data=lalonde, method="nearest", ratio=1, distance="mahalanobis")
summary(m.nnm)
match.data.3 = match.data(m.nnm)
plot(m.cem, type = "jitter", col = "#111d5e")
plot(m.nn, type = "jitter", col = "#111d5e")
#plot(m.nnm, type = "jitter", col = "#111d5e") ## Not appropriate for pure Mahalanobis matching. No plots generated.
### 1. Standardized difference
treated1 <- (match.data.2$treat==1)
cov1 <- match.data.2[,2:9]
std.diff1 <- apply(cov1,2,function(x) 100*(mean(x[treated1])- mean(x[!treated1]))/(sqrt(0.5*(var(x[treated1]) + var(x[!treated1])))))
abs(std.diff1)
### 2. chi-square test
xBalance(treat ~ age + educ + nodegree + re74 + re75, data = match.data.2, report = c("chisquare.test"))
out <- histbackback(split(match.data.1$psvalue, match.data.1$treat), main= "Propensity score after matching (CEM)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.2$psvalue, match.data.2$treat), main= "Propensity score after matching (NN)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
out <- histbackback(split(match.data.3$psvalue, match.data.3$treat), main= "Propensity score after matching (NN w/ Mahalanobis)", xlab=c("control", "treatment"))
barplot(-out$left, col="#111d5e" , horiz=TRUE, space=0, add=TRUE, axes=FALSE)
barplot(out$right, col="#b21f66", horiz=TRUE, space=0, add=TRUE, axes=FALSE)
# saving the data matched
matches <- data.frame(m.nn$match.matrix)
# finding the matches. one for group 1 one for group 2
group1 <- match(row.names(matches), row.names(match.data))
group2 <- match(matches$X1, row.names(match.data))
# extracting the outcome value for the matches
yT  <- match.data$re78[group1]
yC  <- match.data$re78[group2]
# binding
matched.cases <- cbind(matches, yT, yC)
#Paired t-test
t.test(matched.cases$yT, matched.cases$yC, paired = TRUE)
# saving the data matched
matches <- data.frame(m.nn$match.matrix)
# finding the matches. one for group 1 one for group 2
group1 <- match(row.names(matches), row.names(match.data.2))
group2 <- match(matches$X1, row.names(match.data.2))
# extracting the outcome value for the matches
yT  <- match.data.2$re78[group1]
yC  <- match.data.2$re78[group2]
# binding
matched.cases <- cbind(matches, yT, yC)
#Paired t-test
t.test(matched.cases$yT, matched.cases$yC, paired = TRUE)
